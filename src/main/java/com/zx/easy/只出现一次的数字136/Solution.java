package com.zx.easy.只出现一次的数字136;

/**
 * 给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。
 *
 * 你必须设计并实现线性时间复杂度的算法来解决此问题，且该算法只使用常量额外空间。
 *
 *
 *
 * 示例 1 ：
 *
 * 输入：nums = [2,2,1]
 * 输出：1
 * 示例 2 ：
 *
 * 输入：nums = [4,1,2,1,2]
 * 输出：4
 * 示例 3 ：
 *
 * 输入：nums = [1]
 * 输出：1
 */
class Solution {
    /**
     * 异或：^ a^a=0 0^a=a 将有偶数次的数相异或的结果为0， 所以用0与每个数组中的元素相异或后， 偶数次的数字可以忽略不计，
     * // 最后的结果就是 只出现了一次的数字（奇数次）
     * // 如果a、b两个值二进制不相同，则异或结果为1。如果a、b两个值相同，异或结果为0。
     * @param nums
     * @return
     */
    public static int singleNumber(int[] nums) {
        int eor = 0;
        for (int i = 0;i < nums.length;i++){
            eor = eor^nums[i];
        }
        return eor;
    }
}